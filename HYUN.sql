-- 1. USERS 테이블
DROP TABLE USERS CASCADE CONSTRAINTS; -- 기존 테이블이 있다면 삭제
CREATE TABLE USERS (
    USER_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    EMAIL VARCHAR2(255) UNIQUE NOT NULL,
    NAME VARCHAR2(100) NOT NULL,
    NICKNAME VARCHAR2(100) UNIQUE NOT NULL,
    PASSWORD VARCHAR2(255) NOT NULL,
    SIGNUP_TYPE VARCHAR2(10) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT CHK_SIGNUP_TYPE CHECK (SIGNUP_TYPE IN ('email', 'kakao', 'google', 'naver'))
);
COMMENT ON TABLE USERS IS '사용자 정보를 저장하는 테이블';
COMMENT ON COLUMN USERS.USER_ID IS '사용자 고유 ID (기본키)';
COMMENT ON COLUMN USERS.EMAIL IS '로그인에 사용되는 고유 이메일 (유니크)';
COMMENT ON COLUMN USERS.NAME IS '사용자의 실명 또는 설정된 이름';
COMMENT ON COLUMN USERS.NICKNAME IS '커뮤니티 활동 시 사용되는 닉네임 (유니크)';
COMMENT ON COLUMN USERS.PASSWORD IS '암호화된 비밀번호';
COMMENT ON COLUMN USERS.SIGNUP_TYPE IS '사용자 가입 경로 (이메일, 카카오, 구글, 네이버)';
COMMENT ON COLUMN USERS.CREATED_AT IS '사용자 계정 생성 시각';

-- 2. CERTIFICATES 테이블
DROP TABLE CERTIFICATES CASCADE CONSTRAINTS;
CREATE TABLE CERTIFICATES (
    CERT_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(255) UNIQUE NOT NULL,
    DESCRIPTION CLOB
);
COMMENT ON TABLE CERTIFICATES IS '자격증 정보를 저장하는 테이블';
COMMENT ON COLUMN CERTIFICATES.CERT_ID IS '자격증 고유 ID (기본키)';
COMMENT ON COLUMN CERTIFICATES.NAME IS '자격증의 정식 명칭 (예: 정보처리기사) (유니크)';
COMMENT ON COLUMN CERTIFICATES.DESCRIPTION IS '자격증에 대한 상세 설명';

-- 3. SUBJECTS 테이블
DROP TABLE SUBJECTS CASCADE CONSTRAINTS;
CREATE TABLE SUBJECTS (
    SUBJECT_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    CERT_ID NUMBER NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    FOREIGN KEY (CERT_ID) REFERENCES CERTIFICATES(CERT_ID) ON DELETE CASCADE
);
COMMENT ON TABLE SUBJECTS IS '각 자격증에 속한 과목 정보를 저장하는 테이블';
COMMENT ON COLUMN SUBJECTS.SUBJECT_ID IS '과목 고유 ID (기본키)';
COMMENT ON COLUMN SUBJECTS.CERT_ID IS '과목이 속한 자격증의 ID (외래키)';
COMMENT ON COLUMN SUBJECTS.NAME IS '과목명 (예: 데이터베이스, 소프트웨어 공학 등)';

-- 4. PROBLEMS 테이블
DROP TABLE PROBLEMS CASCADE CONSTRAINTS;
CREATE TABLE PROBLEMS (
    PROBLEM_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    SUBJECT_ID NUMBER NOT NULL,
    YEAR NUMBER(4) NOT NULL,
    ROUND NUMBER(2) NOT NULL,
    QUESTION CLOB NOT NULL,
    OPTION_1 CLOB NOT NULL,
    OPTION_2 CLOB NOT NULL,
    OPTION_3 CLOB NOT NULL,
    OPTION_4 CLOB,
    OPTION_5 CLOB,
    ANSWER NUMBER(1) NOT NULL,
    EXPLANATION CLOB,
    FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECTS(SUBJECT_ID) ON DELETE CASCADE,
    CONSTRAINT CHK_PROBLEM_ANSWER CHECK (ANSWER BETWEEN 1 AND 5)
);
COMMENT ON TABLE PROBLEMS IS '각 시험 문제의 상세 정보를 저장하는 테이블';
COMMENT ON COLUMN PROBLEMS.PROBLEM_ID IS '문제 고유 ID (기본키)';
COMMENT ON COLUMN PROBLEMS.SUBJECT_ID IS '문제가 속한 과목의 ID (외래키)';
COMMENT ON COLUMN PROBLEMS.YEAR IS '문제가 출제된 연도';
COMMENT ON COLUMN PROBLEMS.ROUND IS '문제가 출제된 회차';
COMMENT ON COLUMN PROBLEMS.QUESTION IS '문제의 본문 내용';
COMMENT ON COLUMN PROBLEMS.OPTION_1 IS '문제의 보기 1 내용';
COMMENT ON COLUMN PROBLEMS.OPTION_2 IS '문제의 보기 2 내용';
COMMENT ON COLUMN PROBLEMS.OPTION_3 IS '문제의 보기 3 내용';
COMMENT ON COLUMN PROBLEMS.OPTION_4 IS '문제의 보기 4 내용 (4지선다일 경우 NULL)';
COMMENT ON COLUMN PROBLEMS.OPTION_5 IS '문제의 보기 5 내용 (4지선다일 경우 NULL)';
COMMENT ON COLUMN PROBLEMS.ANSWER IS '문제의 정답 보기 번호 (1부터 5 사이)';
COMMENT ON COLUMN PROBLEMS.EXPLANATION IS '문제에 대한 해설 또는 정답 설명';

-- 5. USER_PROBLEM_STATUS 테이블
DROP TABLE USER_PROBLEM_STATUS CASCADE CONSTRAINTS;
CREATE TABLE USER_PROBLEM_STATUS (
    USER_ID NUMBER NOT NULL,
    PROBLEM_ID NUMBER NOT NULL,
    SOLVED NUMBER(1) DEFAULT 0 NOT NULL,
    BOOKMARKED NUMBER(1) DEFAULT 0 NOT NULL,
    WRONG NUMBER(1) DEFAULT 0 NOT NULL,
    PRIMARY KEY (USER_ID, PROBLEM_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (PROBLEM_ID) REFERENCES PROBLEMS(PROBLEM_ID) ON DELETE CASCADE,
    CONSTRAINT CHK_SOLVED CHECK (SOLVED IN (0, 1)),
    CONSTRAINT CHK_BOOKMARKED CHECK (BOOKMARKED IN (0, 1)),
    CONSTRAINT CHK_WRONG CHECK (WRONG IN (0, 1))
);
COMMENT ON TABLE USER_PROBLEM_STATUS IS '사용자별 문제 풀이 및 상태 현황을 기록하는 테이블';
COMMENT ON COLUMN USER_PROBLEM_STATUS.USER_ID IS '사용자 ID (외래키)';
COMMENT ON COLUMN USER_PROBLEM_STATUS.PROBLEM_ID IS '문제 ID (외래키)';
COMMENT ON COLUMN USER_PROBLEM_STATUS.SOLVED IS '사용자가 이 문제를 풀었는지 여부 (0: False, 1: True)';
COMMENT ON COLUMN USER_PROBLEM_STATUS.BOOKMARKED IS '사용자가 이 문제를 즐겨찾기 했는지 여부 (0: False, 1: True)';
COMMENT ON COLUMN USER_PROBLEM_STATUS.WRONG IS '사용자가 이 문제를 틀렸는지 여부 (0: False, 1: True)';

-- 6. USER_CERT_PROGRESS 테이블
DROP TABLE USER_CERT_PROGRESS CASCADE CONSTRAINTS;
CREATE TABLE USER_CERT_PROGRESS (
    PROGRESS_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    CERT_ID NUMBER NOT NULL,
    SOLVED_COUNT NUMBER DEFAULT 0 NOT NULL,
    WRONG_COUNT NUMBER DEFAULT 0 NOT NULL,
    LAST_ACCESSED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    UNIQUE (USER_ID, CERT_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (CERT_ID) REFERENCES CERTIFICATES(CERT_ID) ON DELETE CASCADE
);
COMMENT ON TABLE USER_CERT_PROGRESS IS '사용자별 자격증 학습 진행도를 요약하여 기록하는 테이블';
COMMENT ON COLUMN USER_CERT_PROGRESS.PROGRESS_ID IS '진행도 기록 고유 ID (기본키)';
COMMENT ON COLUMN USER_CERT_PROGRESS.USER_ID IS '사용자 ID (외래키)';
COMMENT ON COLUMN USER_CERT_PROGRESS.CERT_ID IS '자격증 ID (외래키)';
COMMENT ON COLUMN USER_CERT_PROGRESS.SOLVED_COUNT IS '해당 자격증에서 사용자가 푼 문제 수';
COMMENT ON COLUMN USER_CERT_PROGRESS.WRONG_COUNT IS '해당 자격증에서 사용자가 틀린 문제 수';
COMMENT ON COLUMN USER_CERT_PROGRESS.LAST_ACCESSED_AT IS '사용자가 해당 자격증을 마지막으로 학습한 날짜 및 시각';

-- 7. EXAM_LOGS 테이블
DROP TABLE EXAM_LOGS CASCADE CONSTRAINTS;
CREATE TABLE EXAM_LOGS (
    EXAM_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    CERT_ID NUMBER NOT NULL,
    "MODE" VARCHAR2(10) NOT NULL,
    PROBLEM_IDS CLOB NOT NULL,
    STARTED_AT TIMESTAMP NOT NULL,
    ENDED_AT TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (CERT_ID) REFERENCES CERTIFICATES(CERT_ID) ON DELETE CASCADE,
    CONSTRAINT CHK_EXAM_MODE CHECK ("MODE" IN ('전체', '기출'))
);
COMMENT ON TABLE EXAM_LOGS IS '시험 응시 기록';
COMMENT ON COLUMN EXAM_LOGS.EXAM_ID IS '시험 응시 기록 고유 ID (기본키) 자동 증가';
COMMENT ON COLUMN EXAM_LOGS.USER_ID IS '사용자 ID (외래키)';
COMMENT ON COLUMN EXAM_LOGS.CERT_ID IS '자격증 ID (외래키)';
COMMENT ON COLUMN EXAM_LOGS."MODE" IS '시험 모드 (전체 랜덤, 기출만)';
COMMENT ON COLUMN EXAM_LOGS.PROBLEM_IDS IS '응시한 문제들의 ID 목록 (JSON 문자열 형태로 CLOB에 저장)';
COMMENT ON COLUMN EXAM_LOGS.STARTED_AT IS '시험 시작 시각';
COMMENT ON COLUMN EXAM_LOGS.ENDED_AT IS '시험 종료 시각';

-- 8. POSTS 테이블 (커뮤니티)
DROP TABLE POSTS CASCADE CONSTRAINTS;
CREATE TABLE POSTS (
    POST_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    TITLE VARCHAR2(255) NOT NULL,
    CONTENT CLOB NOT NULL,
    CATEGORY VARCHAR2(20) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    CONSTRAINT CHK_POST_CATEGORY CHECK (CATEGORY IN ('자유', '공부모임'))
);
COMMENT ON TABLE POSTS IS '커뮤니티 게시글 정보를 저장하는 테이블';
COMMENT ON COLUMN POSTS.POST_ID IS '게시글 고유 ID (기본키)';
COMMENT ON COLUMN POSTS.USER_ID IS '게시글을 작성한 사용자 ID (외래키)';
COMMENT ON COLUMN POSTS.TITLE IS '게시글의 제목';
COMMENT ON COLUMN POSTS.CONTENT IS '게시글의 본문 내용';
COMMENT ON COLUMN POSTS.CATEGORY IS '게시글이 속한 게시판 종류 (자유 게시판, 공부 모임 게시판)';
COMMENT ON COLUMN POSTS.CREATED_AT IS '게시글 작성 시각';

-- 9. COMMENTS 테이블 (커뮤니티)
DROP TABLE COMMENTS CASCADE CONSTRAINTS;
CREATE TABLE COMMENTS (
    COMMENT_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    POST_ID NUMBER NOT NULL,
    USER_ID NUMBER NOT NULL,
    CONTENT CLOB NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);
COMMENT ON TABLE COMMENTS IS '게시글에 달린 댓글 정보를 저장하는 테이블';
COMMENT ON COLUMN COMMENTS.COMMENT_ID IS '댓글 고유 ID (기본키)';
COMMENT ON COLUMN COMMENTS.POST_ID IS '댓글이 달린 게시글의 ID (외래키)';
COMMENT ON COLUMN COMMENTS.USER_ID IS '댓글을 작성한 사용자 ID (외래키)';
COMMENT ON COLUMN COMMENTS.CONTENT IS '댓글의 본문 내용';
COMMENT ON COLUMN COMMENTS.CREATED_AT IS '댓글 작성 시각';

-- DDL 실행 시 DROP TABLE 부분을 주석 해제하여 기존 테이블을 삭제하고 새로 생성하세요.